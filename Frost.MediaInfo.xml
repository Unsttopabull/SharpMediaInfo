<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>Frost.MediaInfo</name>
  </assembly>
  <members>
    <member name="N:SharpMediaInfo">
    </member>
    <member name="T:SharpMediaInfo.Info">
    </member>
    <member name="P:SharpMediaInfo.Info.KnownParameters">
    </member>
    <member name="M:SharpMediaInfo.Info.KnownParametersCSV(System.Boolean)">
      <param name="complete">
</param>
    </member>
    <member name="P:SharpMediaInfo.Info.KnownCodecs">
    </member>
    <member name="P:SharpMediaInfo.Info.VersionInfo">
    </member>
    <member name="P:SharpMediaInfo.Info.InfoUrl">
    </member>
    <member name="T:SharpMediaInfo.MediaInfo">
    </member>
    <member name="M:SharpMediaInfo.MediaInfo.#ctor">
    </member>
    <member name="P:SharpMediaInfo.MediaInfo.Info">
    </member>
    <member name="P:SharpMediaInfo.MediaInfo.Options">
    </member>
    <member name="M:SharpMediaInfo.MediaInfo.Open(System.String)">
      <summary>
Open a file and collect information about it (technical information and tags)</summary>
      <returns>
Returns true if sucessfull, otherwise false</returns>
      <param name="fileName">
Full name of the file to open.</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfo.Open(System.String,System.Boolean)">
      <summary>
Open a file and collect information about it (technical information and tags)</summary>
      <returns>
Returns true if sucessfull, otherwise false</returns>
      <param name="fileName">
Full name of the file to open.</param>
      <param name="cacheInform">
<para>If should we parse inform data, and return cached values on string indexers and properties when available</para> <para>so we don't call to the DLL if we don't need to.</para></param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfo.Close">
      <summary>
Close a file opened before with Open() (without saving)</summary>
    </member>
    <member name="M:SharpMediaInfo.MediaInfo.Inform">
      <summary>
Get all details about a file in one string</summary>
      <remarks>
You can change default presentation with Inform_Set()</remarks>
      <returns>
string with all the file details</returns>
    </member>
    <member name="M:SharpMediaInfo.MediaInfo.Option(System.String,System.String)">
      <summary>
Configure or get information about MediaInfoLib</summary>
      <returns>
Depend of the option: by default "" (nothing) means No, other means Yes</returns>
      <param name="option">
The option.</param>
      <param name="value">
The value of option</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfo.Option(System.String)">
      <summary>
Configure or get information about MediaInfoLib</summary>
      <returns>
Depend of the option: by default "" (nothing) means No, other means Yes</returns>
      <param name="option">
The option.</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfo.StateGet">
      <summary>
(NOT IMPLEMENTED YET) Get the state of the library</summary>
    </member>
    <member name="T:SharpMediaInfo.MediaInfoList">
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.#ctor">
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.Open(System.String)">
      <summary>
Open one or more files and collect information about them (technical information and tags)</summary>
      <returns>
Number of files successfuly added</returns>
      <param name="fileName">
Full name of file(s) to open or Full name of folder(s) to open (if multiple names, names must be separated by "|")</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.Open(System.String,SharpMediaInfo.InfoFileOptions)">
      <summary>
Open one or more files and collect information about them (technical information and tags)</summary>
      <returns>
Number of files successfuly added</returns>
      <param name="fileName">
Full name of file(s) to open or Full name of folder(s) to open (if multiple names, names must be separated by "|")</param>
      <param name="options">
FileOption_Recursive = Recursive mode for folders FileOption_Close = Close all already opened files before</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.Close(System.Int32)">
      <summary>
(NOT IMPLEMENTED YET) Save all files</summary>
      <param name="filePos">
File position</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.Inform(System.Int32)">
      <summary>
Get all details about a file in one string</summary>
      <remarks>
you can know the position in searching the filename with MediaInfoList::Get(FilePos, 0, 0, "CompleteName")</remarks>
      <param name="filePos">
File position</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.Get(System.Int32,SharpMediaInfo.StreamKind,System.Int32,System.String,SharpMediaInfo.InfoKind,SharpMediaInfo.InfoKind)">
      <summary>
Get a piece of information about a file (parameter is an integer)</summary>
      <returns>
a string about information you search, an empty string if there is a problem</returns>
      <param name="filePos">
File position</param>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
      <param name="streamNumber">
Stream number in Kind of stream (first, second...)</param>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in integer format (first parameter, second parameter...)</param>
      <param name="kindOfInfo">
Kind of information you want about the parameter (the text, the measure, the help...)</param>
      <param name="kindOfSearch">
Where to look for the parameter</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.Get(System.Int32,SharpMediaInfo.StreamKind,System.Int32,System.Int32,SharpMediaInfo.InfoKind)">
      <summary>
Get a piece of information about a file (parameter is an integer)</summary>
      <returns>
a string about information you search, an empty string if there is a problem</returns>
      <param name="filePos">
File position</param>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
      <param name="streamNumber">
Stream number in Kind of stream (first, second...)</param>
      <param name="parameter">
arameter you are looking for in the stream (Codec, width, bitrate...), in integer format (first parameter, second parameter...)</param>
      <param name="kindOfInfo">
Kind of information you want about the parameter (the text, the measure, the help...)</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.Get(System.Int32,SharpMediaInfo.StreamKind,System.Int32,System.String,SharpMediaInfo.InfoKind)">
      <summary>
Get a piece of information about a file (parameter is an integer)</summary>
      <returns>
a string about information you search, an empty string if there is a problem</returns>
      <param name="filePos">
File position</param>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
      <param name="streamNumber">
Stream number in Kind of stream (first, second...)</param>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in integer format (first parameter, second parameter...)</param>
      <param name="kindOfInfo">
Kind of information you want about the parameter (the text, the measure, the help...)</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.Get(System.Int32,SharpMediaInfo.StreamKind,System.Int32,System.String)">
      <summary>
Get a piece of information about a file (parameter is an integer)</summary>
      <returns>
a string about information you search, an empty string if there is a problem</returns>
      <param name="filePos">
File position</param>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
      <param name="streamNumber">
Stream number in Kind of stream (first, second...)</param>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in integer format (first parameter, second parameter...)</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.Get(System.Int32,SharpMediaInfo.StreamKind,System.Int32,System.Int32)">
      <summary>
Get a piece of information about a file (parameter is an integer)</summary>
      <returns>
a string about information you search, an empty string if there is a problem</returns>
      <param name="filePos">
File position</param>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
      <param name="streamNumber">
Stream number in Kind of stream (first, second...)</param>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in integer format (first parameter, second parameter...)</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.Option(System.String,System.String)">
      <summary>
Configure or get information about MediaInfoLib</summary>
      <returns>
Depend of the option: by default "" (nothing) means No, other means Yes</returns>
      <param name="option">
The name of option</param>
      <param name="value">
The value of option</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.StateGet">
      <summary>
Get the state of the library</summary>
      <remarks>
NOT IMPLEMENTED YET</remarks>
      <returns>
<code><b>below 1000</b> =&gt; No information is available for the file yet</code> <code><b>&gt;= 1000 to 4999</b> =&gt; Only local (into the file) information is available, getting Internet information (titles only) is no finished yet</code> <code><b>5000</b> =&gt; (only if Internet connection is accepted) User interaction is needed (use Option() with "Internet_Title_Get") </code> <code><b>Warning:</b> even there is only one possible, user interaction (or the software) is needed</code> <code><b>5001 to 10000</b> =&gt; Only local (into the file) information is available, getting Internet information (all) is no finished yet</code> <code><b>below 10000</b> =&gt; Done</code></returns>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.CountGet(System.Int32,SharpMediaInfo.StreamKind,System.Int32)">
      <summary>
Count of streams, or count of piece of information in this stream.</summary>
      <remarks>
you can know the position in searching the filename with MediaInfoList::Get(FilePos, 0, 0, "CompleteName")</remarks>
      <param name="filePos">
File position</param>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
      <param name="streamNumber">
Stream number in this kind of stream (first, second...)</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.CountGet(System.Int32,SharpMediaInfo.StreamKind)">
      <summary>
Get the count of opened files.</summary>
      <remarks>
you can know the position in searching the filename with MediaInfoList::Get(FilePos, 0, 0, "CompleteName")</remarks>
      <param name="filePos">
File position</param>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.Close">
      <summary>
(NOT IMPLEMENTED YET) Save all files opened before with Open() (modifications of tags)</summary>
    </member>
    <member name="M:SharpMediaInfo.MediaInfoList.Option(System.String)">
      <summary>
Configure or get information about MediaInfoLib</summary>
      <returns>
Depend of the option: by default "" (nothing) means No, other means Yes</returns>
      <param name="option">
The name of option</param>
    </member>
    <member name="N:SharpMediaInfo.Options">
    </member>
    <member name="T:SharpMediaInfo.Options.MpegTS">
    </member>
    <member name="P:SharpMediaInfo.Options.MpegTS.MaximumOffset">
    </member>
    <member name="P:SharpMediaInfo.Options.MpegTS.MaximumScanDuration">
    </member>
    <member name="P:SharpMediaInfo.Options.MpegTS.VbrDetectionDelta">
    </member>
    <member name="P:SharpMediaInfo.Options.MpegTS.VbrDetectionOccurences">
    </member>
    <member name="P:SharpMediaInfo.Options.MpegTS.VbrDetectionGiveUp">
    </member>
    <member name="P:SharpMediaInfo.Options.MpegTS.ForceStreamDisplay">
    </member>
    <member name="T:SharpMediaInfo.Options.Settings">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.SSH">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.SSL">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.MpegTS">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.BlockMethod">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.ShowAllInfo">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.ParseUnknownExtensions">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.ReadByHuman">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.LegacyStreamDisplay">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.SkipBinaryData">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.ParseSpeed">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.Verbosity">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.LineSeparator">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.Version">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.ColumnSeparator">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.TagSeparator">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.Quote">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.DecimalPoint">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.ThousandsPoint">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.StreamMax">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.Language">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.Inform">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.InformPreset">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.InformReplace">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.TraceLevel">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.TraceTimesectionOnlyFirstOccurrence">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.TraceFormat">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.DetailsModificator">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.ShowFiles">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.AllowInternetConnection">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.CustomMapping">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.MultipleValues">
    </member>
    <member name="P:SharpMediaInfo.Options.Settings.Demux">
    </member>
    <member name="T:SharpMediaInfo.Options.SSH">
    </member>
    <member name="P:SharpMediaInfo.Options.SSH.KnownHostsFileName">
    </member>
    <member name="P:SharpMediaInfo.Options.SSH.PublicKeyFileName">
    </member>
    <member name="P:SharpMediaInfo.Options.SSH.PrivateKeyFileName">
    </member>
    <member name="P:SharpMediaInfo.Options.SSH.IgnoreSecurity">
    </member>
    <member name="T:SharpMediaInfo.Options.SSL">
    </member>
    <member name="P:SharpMediaInfo.Options.SSL.CertificateFileName">
    </member>
    <member name="P:SharpMediaInfo.Options.SSL.CertificateFormat">
    </member>
    <member name="P:SharpMediaInfo.Options.SSL.PrivateKeyFilename">
    </member>
    <member name="P:SharpMediaInfo.Options.SSL.PrivateKeyFormat">
    </member>
    <member name="P:SharpMediaInfo.Options.SSL.CertificateAuthorityFilename">
    </member>
    <member name="P:SharpMediaInfo.Options.SSL.CertificateAuthorityPath">
    </member>
    <member name="P:SharpMediaInfo.Options.SSL.CertificateRevocationListFilename">
    </member>
    <member name="P:SharpMediaInfo.Options.SSL.IgnoreSecurity">
    </member>
    <member name="N:SharpMediaInfo.Output">
    </member>
    <member name="T:SharpMediaInfo.Output.CoverInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.CoverInfo.#ctor(SharpMediaInfo.Output.MediaGeneral)">
      <param name="mediaGeneral">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.CoverInfo.CoverDescription">
    </member>
    <member name="P:SharpMediaInfo.Output.CoverInfo.CoverType">
    </member>
    <member name="P:SharpMediaInfo.Output.CoverInfo.CoverMime">
    </member>
    <member name="P:SharpMediaInfo.Output.CoverInfo.CoverData">
    </member>
    <member name="T:SharpMediaInfo.Output.Media">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.Status">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.StreamKindID">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.StreamKindPos">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.StreamOrder">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.FirstPacketOrder">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.ID">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.IDString">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.UniqueID">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.UniqueIDString">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.MenuID">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.MenuIDString">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.StreamNumber">
      <summary>
The default stream number to use when accessing media info through properties</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Media.StreamCount">
      <summary>
Count of Stream Kind streams</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Media.CodecID">
    </member>
    <member name="P:SharpMediaInfo.Output.Media.Any">
      <summary>
Gets a value indicating whether information exists about this kind of stream</summary>
      <remarks>
Equivalent to checking if StreamCount is equal to 0</remarks>
    </member>
    <member name="P:SharpMediaInfo.Output.Media.Item(System.String)">
      <summary>
Get a piece of information about a media element</summary>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in string format ("Codec", "Width"...)</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Media.Item(System.Int32)">
      <summary>
Get a piece of information about a media element (parameter is an integer)</summary>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in integer format (first parameter, second parameter...)</param>
    </member>
    <member name="M:SharpMediaInfo.Output.Media.Get(System.String,SharpMediaInfo.InfoKind,SharpMediaInfo.InfoKind)">
      <summary>
Get a piece of information about an image</summary>
      <returns>
a string about information you search, an empty string if there is a problem</returns>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in string format ("Codec", "Width"...)</param>
      <param name="kindOfInfo">
Kind of information you want about the parameter (the text, the measure, the help...)</param>
      <param name="kindOfSearch">
Where to look for the parameter</param>
    </member>
    <member name="M:SharpMediaInfo.Output.Media.Get(System.Int32,SharpMediaInfo.InfoKind)">
      <summary>
Get a piece of information about an image (parameter is an integer)</summary>
      <returns>
a string about information you search, an empty string if there is a problem</returns>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in integer format (first parameter, second parameter...)</param>
      <param name="kindOfInfo">
Kind of information you want about the parameter (the text, the measure, the help...)</param>
    </member>
    <member name="M:SharpMediaInfo.Output.Media.GetEnumerator">
      <summary>
Returns an enumerator that iterates through the collection.</summary>
      <returns>
A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:SharpMediaInfo.Output.Media.ToString">
      <summary>
Returns a string that represents the current object.</summary>
      <returns>
A string that represents the current object.</returns>
    </member>
    <member name="T:SharpMediaInfo.Output.MediaAudio">
    </member>
    <member name="M:SharpMediaInfo.Output.MediaAudio.#ctor(SharpMediaInfo.Output.MediaFile)">
      <param name="mediaInfo">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Format">
      <summary>
Format used</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Codec">
      <summary>
Codec used</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.InternetMediaType">
      <summary>
Internet Media Type (aka MIME Type, Content-Type)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.MuxingMode">
      <summary>
How this stream is muxed in the container</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.MuxingModeMoreInfo">
      <summary>
More info (text) about the muxing mode</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Duration">
      <summary>
Play time of the stream</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.DurationInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.SourceDuration">
      <summary>
Source Play time of the stream</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.SourceDurationInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.BitRate">
      <summary>
Bit rate in bps</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.BitRateInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Channels">
      <summary>
Number of channels</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.ChannelInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.SamplingRate">
      <summary>
Sampling rate</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.SamplingRateString">
      <summary>
Sampling rate in KHz</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.SamplingCount">
      <summary>
Sample count (based on sampling rate)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.SourceSamplingCount">
      <summary>
Source Sample count (based on sampling rate)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.FrameRate">
      <summary>
Frames per second</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.FrameRateString">
      <summary>
Frames per second (with measurement)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.FrameCount">
      <summary>
Frame count (a frame contains a count of samples depends of the format)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.SourceFrameCount">
      <summary>
Source Frame count (a frame contains a count of samples depends of the format)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Resolution">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.ResolutionString">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.BitDepth">
      <summary>
Resolution in bits (8, 16, 20, 24)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.BitDepthString">
      <summary>
Resolution in bits (8, 16, 20, 24)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.CompressionMode">
      <summary>
Compression mode (Lossy or Lossless)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.CompressionModeString">
      <summary>
Compression mode (Lossy or Lossless)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.CompressionRatio">
      <summary>
Current stream size divided by uncompressed stream size</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Delay">
      <summary>
Delay fixed in the stream (relative) IN MS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.DelayInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.DelayOriginal">
      <summary>
Delay fixed in the raw stream (relative) IN MS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.DelayOriginalInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.VideoDelay">
      <summary>
Delay fixed in the stream (absolute / video)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.VideoDelayInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Video0Delay">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Video0DelayInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.ReplayGainGain">
      <summary>
The gain to apply to reach 89dB SPL on playback</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.ReplayGainGainString">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.ReplayGainPeak">
      <summary>
The maximum absolute peak value of the item</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.StreamSize">
      <summary>
Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.StreamSizeInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.SourceStreamSize">
      <summary>
Source Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.SourceStreamSizeInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.StreamSizeEncoded">
      <summary>
Encoded Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.StreamSizeEncodedInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.SourceStreamSizeEncoded">
      <summary>
Source Encoded Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.SourceStreamSizeEncodedInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Alignment">
      <summary>
How this stream file is aligned in the container</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.AlignmentString">
      <summary>
Where this stream file is aligned in the container</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Interleave">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Title">
      <summary>
Name of the track</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.EncodedLibrary">
      <summary>
Software used to create the file</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.EncodedLibraryInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Language">
      <summary>
Language (2-letter ISO 639-1 if exists, else 3-letter ISO 639-2, and with optional ISO 3166-1 country separated by a dash if available, e.g. en, en-us, zh-cn)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.LanguageInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Default">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.DefaultString">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Forced">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.ForcedString">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.EncodedDate">
      <summary>
UTC time that the encoding of this item was completed began.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.TaggedDate">
      <summary>
UTC time that the tags were done for this item.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaAudio.Encryption">
    </member>
    <member name="T:SharpMediaInfo.Output.MediaFile">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaFile.General">
      <summary>
General info about the media file</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaFile.Text">
      <summary>
Info about subtitles and other text elements</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaFile.Video">
      <summary>
Info about video format, codec, compression ...</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaFile.Audio">
      <summary>
Info about audio format, codec, channels, positions</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaFile.Image">
      <summary>
Info about image resolution, format, width, height, ...</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaFile.Other">
      <summary>
Other info that couldn't be put in other categories</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaFile.Menu">
      <summary>
Info about menues and chapters</summary>
    </member>
    <member name="M:SharpMediaInfo.Output.MediaFile.Inform">
      <summary>
Get all details about a file in one string</summary>
      <returns>
A string containing all details about a file.</returns>
    </member>
    <member name="M:SharpMediaInfo.Output.MediaFile.Get(SharpMediaInfo.StreamKind,System.Int32,System.String,SharpMediaInfo.InfoKind,SharpMediaInfo.InfoKind)">
      <summary>
Get a piece of information about a file (parameter is an integer)</summary>
      <returns>
a string about information you search, an empty string if there is a problem</returns>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
      <param name="streamNumber">
Stream number in Kind of stream (first, second...)</param>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in string format ("Codec", "Width"...)</param>
      <param name="kindOfInfo">
Kind of information you want about the parameter (the text, the measure, the help...)</param>
      <param name="kindOfSearch">
Where to look for the parameter</param>
    </member>
    <member name="M:SharpMediaInfo.Output.MediaFile.Get(SharpMediaInfo.StreamKind,System.Int32,System.Int32,SharpMediaInfo.InfoKind)">
      <summary>
Get a piece of information about a file (parameter is an integer)</summary>
      <returns>
a string about information you search, an empty string if there is a problem</returns>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
      <param name="streamNumber">
Stream number in Kind of stream (first, second...)</param>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in integer format (first parameter, second parameter...)</param>
      <param name="kindOfInfo">
Kind of information you want about the parameter (the text, the measure, the help...)</param>
    </member>
    <member name="M:SharpMediaInfo.Output.MediaFile.Get(SharpMediaInfo.StreamKind,System.Int32,System.String,SharpMediaInfo.InfoKind)">
      <summary>
Get a piece of information about a file</summary>
      <returns>
a string about information you search, an empty string if there is a problem</returns>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
      <param name="streamNumber">
Stream number in Kind of stream (first, second...)</param>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in string format ("Codec", "Width"...)</param>
      <param name="kindOfInfo">
Kind of information you want about the parameter (the text, the measure, the help...)</param>
    </member>
    <member name="M:SharpMediaInfo.Output.MediaFile.Get(SharpMediaInfo.StreamKind,System.Int32,System.String)">
      <summary>
Get a piece of information about a file</summary>
      <returns>
a string about information you search, an empty string if there is a problem</returns>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
      <param name="streamNumber">
Stream number in Kind of stream (first, second...)</param>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in integer format (first parameter, second parameter...)</param>
    </member>
    <member name="M:SharpMediaInfo.Output.MediaFile.Get(SharpMediaInfo.StreamKind,System.Int32,System.Int32)">
      <summary>
Get a piece of information about a file (parameter is an integer)</summary>
      <returns>
a string about information you search, an empty string if there is a problem</returns>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
      <param name="streamNumber">
Stream number in Kind of stream (first, second...)</param>
      <param name="parameter">
Parameter you are looking for in the stream (Codec, width, bitrate...), in integer format (first parameter, second parameter...)</param>
    </member>
    <member name="M:SharpMediaInfo.Output.MediaFile.CountGet(SharpMediaInfo.StreamKind,System.Int32)">
      <summary>
Count of streams of a stream kind (StreamNumber not filled), or count of piece of information in this stream.</summary>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
      <param name="streamNumber">
Stream number in this kind of stream (first, second...)</param>
    </member>
    <member name="M:SharpMediaInfo.Output.MediaFile.CountGet(SharpMediaInfo.StreamKind)">
      <summary>
Count of streams of a stream kind (StreamNumber not filled), or count of piece of information in this stream.</summary>
      <param name="streamKind">
Kind of stream (general, video, audio...)</param>
    </member>
    <member name="T:SharpMediaInfo.Output.MediaGeneral">
    </member>
    <member name="M:SharpMediaInfo.Output.MediaGeneral.#ctor(SharpMediaInfo.Output.MediaFile)">
      <param name="mediaInfo">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.GeneralCount">
      <summary>
Number of general streams</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.VideoCount">
      <summary>
Number of video streams</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.VideoFormatList">
      <summary>
Video Codecs in this file, separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.VideoFormatWithHintList">
      <summary>
Video Codecs in this file with popular name (hint), separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.VideoCodecList">
      <summary>
Deprecated, do not use in new projects</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.VideoLanguageList">
      <summary>
Video languagesin this file, full names, separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.AudioCount">
      <summary>
Number of audio streams</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.AudioFormatList">
      <summary>
Audio Codecs in this file,separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.AudioFormatWithHintList">
      <summary>
Audio Codecs in this file with popular name (hint), separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.AudioCodecList">
      <summary>
Deprecated, do not use in new projects</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.AudioLanguageList">
      <summary>
Audio languages in this file separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.TextCount">
      <summary>
Number of text streams</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.TextFormatList">
      <summary>
Text Codecs in this file, separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.TextFormatWithHintList">
      <summary>
Text Codecs in this file with popular name (hint),separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.TextCodecList">
      <summary>
Deprecated, do not use in new projects</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.TextLanguageList">
      <summary>
Text languages in this file, separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OtherCount">
      <summary>
Number of other streams</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OtherFormatList">
      <summary>
Other formats in this file, separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OtherFormatWithHintList">
      <summary>
Other formats in this file with popular name (hint), separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OtherCodecList">
      <summary>
Deprecated, do not use in new projects</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OtherLanguageList">
      <summary>
Chapters languages in this file, separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ImageCount">
      <summary>
Number of image streams</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ImageFormatList">
      <summary>
Image Codecs in this file, separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ImageFormatWithHintList">
      <summary>
Image Codecs in this file with popular name (hint), separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ImageCodecList">
      <summary>
Deprecated, do not use in new projects</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ImageLanguageList">
      <summary>
Image languages in this file, separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.MenuCount">
      <summary>
Number of menu streams</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.MenuFormatList">
      <summary>
Menu Codecsin this file, separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.MenuFormatWithHintList">
      <summary>
Menu Codecs in this file with popular name (hint),separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.MenuCodecList">
      <summary>
Deprecated, do not use in new projects</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.MenuLanguageList">
      <summary>
Menu languages in this file, separated by /</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Format">
      <summary>
Format used</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.InternetMediaType">
      <summary>
Internet Media Type (aka MIME Type, Content-Type)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Interleaved">
      <summary>
If Audio and video are muxed</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Codec">
      <summary>
Deprecated, do not use in new projects</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Duration">
      <summary>
Play time of the stream in ms</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.DurationInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OverallBitRate">
      <summary>
Bit rate of all streams in bps</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OverallBitRateInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Delay">
      <summary>
Delay fixed in the stream (relative) IN MS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.DelayInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.StreamSize">
      <summary>
Stream size in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.StreamSizeInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.HeaderSize">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.DataSize">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.FooterSize">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.IsStreamable">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.AlbumReplayGainGain">
      <summary>
The gain to apply to reach 89dB SPL on playback</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.AlbumReplayGainPeak">
      <summary>
The maximum absolute peak value of the item</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Encryption">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Title">
      <summary>
(Generic)Title of file</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.TitleMore">
      <summary>
(Generic)More info about the title of file</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.TitleUrl">
      <summary>
(Generic)Url</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Domain">
      <summary>
Univers movies belong to, e.g. Starwars, Stargate, Buffy, Dragonballs</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Collection">
      <summary>
Name of the series, e.g. Starwars movies, Stargate SG-1, Stargate Atlantis, Buffy, Angel</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Season">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Movie">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Album">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Comic">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Part">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Track">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Grouping">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Chapter">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.SubTrack">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OriginalAlbum">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OriginalMovie">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OriginalPart">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OriginalTrack">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Compilation">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.CompilationString">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Performer">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Accompaniment">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Composer">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ComposerNationality">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Arranger">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Lyricist">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OriginalLyricist">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Conductor">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Director">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.AssistantDirector">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.DirectorOfPhotography">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.SoundEngineer">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ArtDirector">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ProductionDesigner">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Choregrapher">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.CostumeDesigner">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Actor">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ActorCharacter">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.WrittenBy">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ScreenplayBy">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.EditedBy">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.CommissionedBy">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Producer">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.CoProducer">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ExecutiveProducer">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.MusicBy">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.DistributedBy">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OriginalSourceFormDistributedBy">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.MasteredBy">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.EncodedBy">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.RemixedBy">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ProductionStudio">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ThanksTo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Publisher">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.PublisherURL">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Label">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Genre">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Mood">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ContentType">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Subject">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Description">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Keywords">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Summary">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Synopsis">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Period">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.LawRating">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.LawRatingReason">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Icra">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ReleasedDate">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OriginalReleasedDate">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.RecordedDate">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.EncodedDate">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.TaggedDate">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.WrittenDate">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.MasteredDate">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.FileInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.RecordedLocation">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.WrittenLocation">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ArchivalLocation">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.EncodedApplication">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.EncodedApplicationUrl">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.EncodedLibrary">
      <summary>
Software used to create the file</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.EncodedLibraryInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Cropped">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Dimensions">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.DotsPerInch">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Lightness">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OriginalSourceInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.TaggedApplication">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.BPM">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ISRC">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ISBN">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.BarCode">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.LCCN">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.CatalogNumber">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.LabelCode">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Owner">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Copyright">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.CopyrightUrl">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.ProducerCopyright">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.TermsOfUse">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Service">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.NetworkName">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.OriginalNetworkName">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Country">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.TimeZone">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Cover">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.CoverInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Lyrics">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Comment">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.Rating">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.AddedDate">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.PlayedFirstDate">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.PlayedLastDate">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.PlayedCount">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.EPGPositionsBegin">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaGeneral.EPGPositionsEnd">
    </member>
    <member name="T:SharpMediaInfo.Output.MediaImage">
    </member>
    <member name="M:SharpMediaInfo.Output.MediaImage.#ctor(SharpMediaInfo.Output.MediaFile)">
      <param name="mediaInfo">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.Title">
      <summary>
Name of the track</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.Format">
      <summary>
Info about the Format used</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.InternetMediaType">
      <summary>
Internet Media Type (aka MIME Type, Content-Type)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.Codec">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.Width">
      <summary>
Width (aperture size if present) in pixel</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.WidthInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.Height">
      <summary>
Height (aperture size if present) in pixel</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.HeightInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.PixelAspectRatio">
      <summary>
Pixel Aspect ratio</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.PixelAspectRatioInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.DisplayAspectRatio">
      <summary>
Display Aspect ratio</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.DisplayAspectRatioInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.ColorSpace">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.ChromaSubsampling">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.Resolution">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.ResolutionString">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.BitDepth">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.BitDepthString">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.CompressionMode">
      <summary>
Compression mode (Lossy or Lossless)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.CompressionModeString">
      <summary>
Compression mode (Lossy or Lossless)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.CompressionRatio">
      <summary>
Current stream size divided by uncompressed stream size</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.StreamSize">
      <summary>
Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.StreamSizeInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.EncodedLibrary">
      <summary>
Software used to create the file</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.EncodedLibraryInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.Language">
      <summary>
Language (2-letter ISO 639-1 if exists, else 3-letter ISO 639-2, and with optional ISO 3166-1 country separated by a dash if available, e.g. en, en-us, zh-cn)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.LanguageInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.Default">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.DefaultString">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.Forced">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.ForcedString">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.Summary">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.EncodedDate">
      <summary>
UTC time that the encoding of this item was completed began.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.TaggedDate">
      <summary>
UTC time that the tags were done for this item.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaImage.Encryption">
    </member>
    <member name="T:SharpMediaInfo.Output.MediaMenu">
    </member>
    <member name="M:SharpMediaInfo.Output.MediaMenu.#ctor(SharpMediaInfo.Output.MediaFile)">
      <param name="mediaInfo">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.Codec">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.Format">
      <summary>
Info about the Format used</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.Duration">
      <summary>
Play time of the stream in ms</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.DurationInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.Delay">
      <summary>
Delay fixed in the stream (relative) IN MS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.DelayInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.List">
      <summary>
List of programs available</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.ListStreamKind">
      <summary>
List of programs available</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.ListStreamPos">
      <summary>
List of programs available</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.ListString">
      <summary>
List of programs available</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.Title">
      <summary>
Name of this menu</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.Language">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.LanguageInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.ServiceInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.NetworkName">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.OriginalNetworkName">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.Countries">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.TimeZones">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.ChaptersPosBegin">
      <summary>
Used by third-party developers to know about the beginning of the chapters list, to be used by Get(Stream_Menu, x, Pos), where Pos is an Integer between Chapters_Pos_Begin and Chapters_Pos_End</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaMenu.ChaptersPosEnd">
      <summary>
Used by third-party developers to know about the end of the chapters list (this position excluded)</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.MediaOther">
    </member>
    <member name="M:SharpMediaInfo.Output.MediaOther.#ctor(SharpMediaInfo.Output.MediaFile)">
      <param name="mediaInfo">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.Format">
      <summary>
Info about the Format used</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.Type">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.MuxingMode">
      <summary>
How this file is muxed in the container</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.Duration">
      <summary>
Play time of the stream in ms</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.DurationInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.FrameRate">
      <summary>
Frames per second</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.FrameRateString">
      <summary>
Frames per second (with measurement)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.FrameCount">
      <summary>
Number of frames</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.TimeStampFirstFrame">
      <summary>
TimeStamp fixed in the stream (relative) IN MS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.TimeStampFirstFrameString">
      <summary>
TimeStamp with measurement</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.TimeStampFirstFrameString1">
      <summary>
TimeStamp with measurement</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.TimeStampFirstFrameString2">
      <summary>
TimeStamp with measurement</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.TimeStampFirstFrameString3">
      <summary>
TimeStamp in format : HH:MM:SS.MMM</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.TimeCodeFirstFrame">
      <summary>
Time code in HH:MM:SS:FF (HH:MM:SS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.TimeCodeSettings">
      <summary>
Time code settings</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.Title">
      <summary>
Name of the track</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.Language">
      <summary>
Language (2-letter ISO 639-1 if exists, else 3-letter ISO 639-2, and with optional ISO 3166-1 country separated by a dash if available, e.g. en, en-us, zh-cn)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaOther.LanguageInfo">
    </member>
    <member name="T:SharpMediaInfo.Output.MediaText">
    </member>
    <member name="M:SharpMediaInfo.Output.MediaText.#ctor(SharpMediaInfo.Output.MediaFile)">
      <param name="mediaInfo">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Format">
      <summary>
Info about the Format used</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Codec">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.InternetMediaType">
      <summary>
Internet Media Type (aka MIME Type, Content-Type)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.MuxingMode">
      <summary>
How this stream is muxed in the container</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.MuxingModeMoreInfo">
      <summary>
More info (text) about the muxing mode</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Duration">
      <summary>
Play time of the stream in ms</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.DurationInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.SourceDuration">
      <summary>
Source Play time of the stream</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.SourceDurationInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.BitRate">
      <summary>
Bit rate in bps</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.BitRateInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Width">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.WidthString">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Height">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.HeightString">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.FrameRate">
      <summary>
Frames per second</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.FrameRateInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.FrameCount">
      <summary>
Number of frames</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.SourceFrameCount">
      <summary>
Source Number of frames</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.ColorSpace">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.ChromaSubsampling">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Resolution">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.ResolutionString">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.BitDepth">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.BitDepthString">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.CompressionMode">
      <summary>
Compression mode (Lossy or Lossless)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.CompressionModeString">
      <summary>
Compression mode (Lossy or Lossless)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.CompressionRatio">
      <summary>
Current stream size divided by uncompressed stream size</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Delay">
      <summary>
Delay fixed in the stream (relative) IN MS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.DelayInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.DelayOriginal">
      <summary>
Delay fixed in the raw stream (relative) IN MS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.DelayOriginalInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.VideoDelay">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.VideoDelayInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Video0Delay">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Video0DelayInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.StreamSize">
      <summary>
Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.StreamSizeInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.SourceStreamSize">
      <summary>
Source Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.SourceStreamSizeInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.StreamSizeEncoded">
      <summary>
Encoded Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.StreamSizeEncodedInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.SourceStreamSizeEncoded">
      <summary>
Source Encoded Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.SourceStreamSizeEncodedInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Title">
      <summary>
Name of the track</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.EncodedLibrary">
      <summary>
Software used to create the file</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.EncodedLibraryInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Language">
      <summary>
Language (2-letter ISO 639-1 if exists, else 3-letter ISO 639-2, and with optional ISO 3166-1 country separated by a dash if available, e.g. en, en-us, zh-cn)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.LanguageInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Default">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.DefaultString">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Forced">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.ForcedString">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Summary">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.EncodedDate">
      <summary>
UTC time that the encoding of this item was completed began.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.TaggedDate">
      <summary>
UTC time that the tags were done for this item.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaText.Encryption">
    </member>
    <member name="T:SharpMediaInfo.Output.MediaVideo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Format">
      <summary>
Info about the Format used</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Codec">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.MultiViewBaseProfile">
      <summary>
Multiview, profile of the base stream</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.MultiViewCount">
      <summary>
Multiview, count of views</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.MultiViewLayout">
      <summary>
Multiview, how views are muxed in the container in case of it is not muxing in the stream</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.InternetMediaType">
      <summary>
Internet Media Type (aka MIME Type, Content-Type)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.MuxingMode">
      <summary>
How this file is muxed in the container</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Duration">
      <summary>
Play time of the stream in ms</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.DurationInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.SourceDuration">
      <summary>
Source Play time of the stream</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.SourceDurationInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.BitRate">
      <summary>
Bit rate in bps</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.BitRateInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Width">
      <summary>
Width (aperture size if present) in pixel</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.WidthInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Height">
      <summary>
Height (aperture size if present) in pixel</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.HeightInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.PixelAspectRatio">
      <summary>
Pixel Aspect ratio</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.PixelAspectRatioInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.DisplayAspectRatio">
      <summary>
Display Aspect ratio</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.DisplayAspectRatioInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.ActiveFormatDescription">
      <summary>
Active Format Description (AFD value)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.ActiveFormatDescriptionString">
      <summary>
Active Format Description (text)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.ActiveFormatDescriptionMuxingMode">
      <summary>
Active Format Description (AFD value) muxing mode (Ancillary or Raw stream)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Rotation">
      <summary>
Rotation</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.RotationString">
      <summary>
Rotation (if not horizontal)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.FrameRate">
      <summary>
Frames per second</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.FrameRateInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.FrameCount">
      <summary>
Number of frames</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.SourceFrameCount">
      <summary>
Source Number of frames</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Standard">
      <summary>
NTSC or PAL</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Resolution">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.ResolutionString">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Colorimetry">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.ColorSpace">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.ChromaSubsampling">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.BitDepth">
      <summary>
16/24/32</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.BitDepthString">
      <summary>
16/24/32 bits</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.ScanType">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.ScanTypeInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.ScanOrder">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.ScanOrderInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Interlacement">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.InterlacementString">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.CompressionMode">
      <summary>
Compression mode (Lossy or Lossless)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.CompressionModeString">
      <summary>
Compression mode (Lossy or Lossless)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.CompressionRatio">
      <summary>
Current stream size divided by uncompressed stream size</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.BitsPerPixelFrame">
      <summary>
bits/(Pixel*Frame) (like Gordian Knot)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Delay">
      <summary>
Delay fixed in the stream (relative) IN MS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.DelayInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.DelayOriginal">
      <summary>
Delay fixed in the raw stream (relative) IN MS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.DelayOriginalInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.TimeStampFirstFrame">
      <summary>
TimeStamp fixed in the stream (relative) IN MS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.TimeStampFirstFrameString">
      <summary>
TimeStamp with measurement</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.TimeStampFirstFrameString1">
      <summary>
TimeStamp with measurement</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.TimeStampFirstFrameString2">
      <summary>
TimeStamp with measurement</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.TimeStampFirstFrameString3">
      <summary>
TimeStamp in format : HH:MM:SS.MMM</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.TimeCodeFirstFrame">
      <summary>
Time code in HH:MM:SS:FF (HH:MM:SS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.TimeCodeSettings">
      <summary>
Time code settings</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.TimeCodeSource">
      <summary>
Time code source (Container, Stream, SystemScheme1, SDTI, ANC...)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.StreamSize">
      <summary>
Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.StreamSizeInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.SourceStreamSize">
      <summary>
Source Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.SourceStreamSizeInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.StreamSizeEncoded">
      <summary>
Encoded Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.StreamSizeEncodedInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.SourceStreamSizeEncoded">
      <summary>
Source Encoded Streamsize in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.SourceStreamSizeEncodedInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Alignment">
      <summary>
Name of the track</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.AlignmentString">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Title">
      <summary>
Name of the track</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.EncodedApplication">
      <summary>
Software. Identifies the name of the software package used to create the file, such as Microsoft WaveEdit.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.EncodedApplicationUrl">
      <summary>
Software. Identifies the name of the software package used to create the file, such as Microsoft WaveEdit.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.EncodedLibrary">
      <summary>
Software used to create the file</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.EncodedLibraryInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Language">
      <summary>
Language (2-letter ISO 639-1 if exists, else 3-letter ISO 639-2, and with optional ISO 3166-1 country separated by a dash if available, e.g. en, en-us, zh-cn)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.LanguageInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Default">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.DefaultString">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Forced">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.ForcedString">
      <summary>
Set if that track should be used if no language found matches the user preference.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.EncodedDate">
      <summary>
UTC time that the encoding of this item was completed began.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.TaggedDate">
      <summary>
UTC time that the tags were done for this item.</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.Encryption">
    </member>
    <member name="P:SharpMediaInfo.Output.MediaVideo.BufferSize">
      <summary>
Defines the size of the buffer needed to decode the sequence.</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.OriginalSourceInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.OriginalSourceInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.OriginalSourceInfo.Medium">
      <summary>
Original medium of the material, e.g. vinyl, Audio-CD, Super8 or BetaMax</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.OriginalSourceInfo.Form">
      <summary>
Original form of the material, e.g. slide, paper, map</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.OriginalSourceInfo.FormNumColors">
      <summary>
Number of colors requested when digitizing, e.g. 256 for images or 32 bit RGB for video</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.OriginalSourceInfo.FormName">
      <summary>
Name of the product the file was originally intended for</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.OriginalSourceInfo.FormCropped">
      <summary>
Describes whether an image has been cropped and, if so, how it was cropped. e.g. 16:9 to 4:3, top and bottom</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.OriginalSourceInfo.FormSharpness">
      <summary>
Identifies the changes in sharpness for the digitizer requiered to produce the file</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.PartInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.PartInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.PartInfo.Part">
    </member>
    <member name="P:SharpMediaInfo.Output.PartInfo.PartPosition">
    </member>
    <member name="P:SharpMediaInfo.Output.PartInfo.PartPositionTotal">
    </member>
    <member name="N:SharpMediaInfo.Output.Properties">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.BitRateInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.BitRateInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.BitRateInfo.Encoded">
      <summary>
Encoded (with forced padding) bit rate in bps, if some container padding is present</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.BitRateInfo.EncodedString">
      <summary>
Encoded (with forced padding) bit rate (with measurement), if some container padding is present</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.ChannelInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.ChannelInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.ChannelInfo.String">
      <summary>
Number of channels (with measurement)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.ChannelInfo.Original">
      <summary>
Number of channels</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.ChannelInfo.OriginalString">
      <summary>
Number of channels (with measurement)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.ChannelInfo.Positions">
      <summary>
Position of channels</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.ChannelInfo.PositionsString2">
      <summary>
Position of channels (x/y.z format)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.ChannelInfo.Layout">
      <summary>
Layout of channels (in the stream)</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.CodecID">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.CodecID.Value">
      <summary>
Codec ID (found in some containers)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.CodecID.String">
      <summary>
Codec ID (found in some containers)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.CodecID.Info">
      <summary>
Info about codec ID</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.CodecID.Hint">
      <summary>
A hint for this codec ID</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.CodecID.Url">
      <summary>
A link for more details about this codec ID</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.CodecID.Description">
      <summary>
Manual description given by the container</summary>
    </member>
    <member name="N:SharpMediaInfo.Output.Properties.Codecs">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Codecs.AudioCodec">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.Codecs.AudioCodec.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.AudioCodec.Family">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.AudioCodec.Description">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.AudioCodec.Profile">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.AudioCodec.Settings">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.AudioCodec.Settings_Automatic">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.AudioCodec.Settings_Floor">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.AudioCodec.Settings_Firm">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.AudioCodec.Settings_Endianness">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.AudioCodec.Settings_Sign">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.AudioCodec.Settings_Law">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.AudioCodec.Settings_ITU">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Codecs.Codec">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.Codecs.Codec.#ctor(SharpMediaInfo.Output.Media)">
      <param name="mediaMenu">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.Codec.Name">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.Codec.String">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.Codec.Info">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.Codec.Url">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Codecs.GeneralCodec">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.Codecs.GeneralCodec.#ctor(SharpMediaInfo.Output.Media)">
      <param name="mediaMenu">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.GeneralCodec.CodecExtensions">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.GeneralCodec.CodecSettings">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.GeneralCodec.CodecSettingsAutomatic">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Codecs.TextCodec">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.Codecs.TextCodec.#ctor(SharpMediaInfo.Output.Media)">
      <param name="mediaText">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.TextCodec.CC">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Codecs.VideoCodec">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.Family">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.Profile">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.Description">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.Settings">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.PacketBitStream">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.BVOP">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.QPel">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.GMC">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.GMCString">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.Matrix">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.MatrixData">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.CABAC">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Codecs.VideoCodec.RefFrames">
    </member>
    <member name="N:SharpMediaInfo.Output.Properties.Delay">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Delay.DelayInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Delay.DelayInfo.String4">
      <summary>
Delay in format : HH:MM:SS:FF (HH:MM:SS</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Delay.DelayInfo.Settings">
      <summary>
Delay settings (in case of timecode for example)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Delay.DelayInfo.DropFrame">
      <summary>
Delay drop frame</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Delay.DelayInfo.Source">
      <summary>
Delay source (Container or Stream or empty)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Delay.DelayInfo.SourceString">
      <summary>
Delay source (Container or Stream or empty)</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Delay.GeneralDelayInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.Delay.GeneralDelayInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Delay.GeneralDelayInfo.String">
      <summary>
Delay with measurement</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Delay.GeneralDelayInfo.String1">
      <summary>
Delay with measurement</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Delay.GeneralDelayInfo.String2">
      <summary>
Delay with measurement</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Delay.GeneralDelayInfo.String3">
      <summary>
Delay in format: HH:MM:SS.MMM</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Delay.VideoDelayInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Delay.VideoDelayInfo.String4">
      <summary>
Delay in format : HH:MM:SS:FF (HH:MM:SS</summary>
    </member>
    <member name="N:SharpMediaInfo.Output.Properties.Duration">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Duration.DurationInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.Duration.DurationInfo.#ctor(SharpMediaInfo.Output.Media,System.Boolean)">
      <param name="media">
</param>
      <param name="originalDuration">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.DurationInfo.String">
      <summary>
Play time in format : XXx YYy only, YYy omited if zero</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.DurationInfo.String1">
      <summary>
Play time in format : HHh MMmn SSs MMMms, XX omited if zero</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.DurationInfo.String2">
      <summary>
Play time in format : XXx YYy only, YYy omited if zero</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.DurationInfo.String3">
      <summary>
Play time in format : HH:MM:SS.MMM</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Duration.ExtendedDurationInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.Duration.ExtendedDurationInfo.#ctor(SharpMediaInfo.Output.Media,System.Boolean)">
      <param name="media">
</param>
      <param name="source">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.ExtendedDurationInfo.FirstFrame">
      <summary>
Duration of the first frame if it is longer than others, in ms</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.ExtendedDurationInfo.FirstFrameString">
      <summary>
Duration of the first frame if it is longer than others, in format : XXx YYy only, YYy omited if zero</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.ExtendedDurationInfo.FirstFrameString1">
      <summary>
Duration of the first frame if it is longer than others, in format : HHh MMmn SSs MMMms, XX omited if zero</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.ExtendedDurationInfo.FirstFrameString2">
      <summary>
Duration of the first frame if it is longer than others, in format : XXx YYy only, YYy omited if zero</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.ExtendedDurationInfo.FirstFrameString3">
      <summary>
Duration of the first frame if it is longer than others, in format : HH:MM:SS.MMM</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.ExtendedDurationInfo.LastFrame">
      <summary>
Duration of the last frame if it is longer than others, in ms</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.ExtendedDurationInfo.LastFrameString">
      <summary>
Duration of the last frame if it is longer than others, in format : XXx YYy only, YYy omited if zero</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.ExtendedDurationInfo.LastFrameString1">
      <summary>
Duration of the last frame if it is longer than others, in format : HHh MMmn SSs MMMms, XX omited if zero</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.ExtendedDurationInfo.LastFrameString2">
      <summary>
Duration of the last frame if it is longer than others, in format : XXx YYy only, YYy omited if zero</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.ExtendedDurationInfo.LastFrameString3">
      <summary>
Duration of the last frame if it is longer than others, in format : HH:MM:SS.MMM</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Duration.GeneralDurationInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.Duration.GeneralDurationInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.GeneralDurationInfo.Start">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Duration.GeneralDurationInfo.End">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.EncodedLibraryInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.EncodedLibraryInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.EncodedLibraryInfo.String">
      <summary>
Software used to create the file</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.EncodedLibraryInfo.Name">
      <summary>
Info from the software</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.EncodedLibraryInfo.Version">
      <summary>
Version of software</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.EncodedLibraryInfo.Date">
      <summary>
Release date of software</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.EncodedLibraryInfo.Settings">
      <summary>
Parameters used by the software</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.FileSizeInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.FileSizeInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FileSizeInfo.String">
      <summary>
File size (with measure)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FileSizeInfo.String1">
      <summary>
File size (with measure, 1 digit mini)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FileSizeInfo.String2">
      <summary>
File size (with measure, 2 digit mini)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FileSizeInfo.String3">
      <summary>
File size (with measure, 3 digit mini)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FileSizeInfo.String4">
      <summary>
File size (with measure, 4 digit mini)</summary>
    </member>
    <member name="N:SharpMediaInfo.Output.Properties.Formats">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Formats.AudioFormat">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.SBR">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.SBRString">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.PS">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.PSString">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.Mode">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.ModeExtension">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.Emphasis">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.Floor">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.Firm">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.Endianness">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.Sign">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.Law">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.ITU">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.AudioFormat.Wrapping">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Formats.Format">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.Format.Summary">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.Format.Info">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.Format.Url">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.Format.Commercial">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.Format.CommercialIfAny">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.Format.Version">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.Format.Profile">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.Format.Compression">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.Format.Settings">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Formats.FormatWithWrapping">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.FormatWithWrapping.WrappingSettings">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Formats.GeneralFormat">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.GeneralFormat.String">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.GeneralFormat.FormatExtensions">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Formats.VideoFormat">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.BVOP">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.BVOPString">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.QPel">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.QPelString">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.GMC">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.GMCString">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.Matrix">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.MatrixString">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.MatrixData">
      <summary>
Matrix, in binary format encoded BASE64. Order = intra, non-intra, gray intra, gray non-intra</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.CABAC">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.CABACString">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.RefFrames">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.RefFramesString">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.Pulldown">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.FrameMode">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.GOP">
      <summary>
detailled (M=x N=y)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.FrameStructures">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Formats.VideoFormat.Wrapping">
      <summary>
Wrapping mode (Frame wrapped or Clip wrapped)</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.FrameRateInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.FrameRateInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.String">
      <summary>
Frames per second (with measurement)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.Original">
      <summary>
Original (in the raw stream) frames per second</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.OriginalString">
      <summary>
Original (in the raw stream) frames per second</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.Mode">
      <summary>
Frame rate mode (CFR, VFR)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.ModeString">
      <summary>
Frame rate mode (Constant, Variable)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.ModeOriginal">
      <summary>
Original frame rate mode (CFR, VFR)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.ModeOriginalString">
      <summary>
Original frame rate mode (Constant, Variable)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.Minimum">
      <summary>
Minimum Frames per second</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.MinimumString">
      <summary>
Minimum Frames per second (with measurement)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.Nominal">
      <summary>
Nominal Frames per second</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.NominalString">
      <summary>
Nominal Frames per second (with measurement)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.Maximum">
      <summary>
Maximum Frames per second</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.FrameRateInfo.MaximumString">
      <summary>
Maximum Frames per second (with measurement)</summary>
    </member>
    <member name="N:SharpMediaInfo.Output.Properties.General">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.General.Album">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.General.Album.#ctor(SharpMediaInfo.Output.MediaGeneral)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Album.Name">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Album.More">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Album.Sort">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Album.Performer">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Album.PerformerSort">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Album.PerformerUrl">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.General.Comic">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.General.Comic.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Comic.Name">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Comic.More">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Comic.PositionTotal">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.General.FileInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.General.FileInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.CreatedDate">
      <summary>
The time that the file was created on the file system</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.CreatedDateLocal">
      <summary>
The time that the file was created on the file system (Warning: this field depends of local configuration, do not use it in an international database)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.ModifiedDate">
      <summary>
The time that the file was modified on the file system</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.FileModifiedDateLocal">
      <summary>
The time that the file was modified on the file system (Warning: this field depends of local configuration, do not use it in an international database)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.FileSize">
      <summary>
File size in bytes</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.FileSizeInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.CompleteName">
      <summary>
Complete name (Folder+Name+Extension)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.CompleteNameLast">
      <summary>
Complete name (Folder+Name+Extension) of the last file (in the case of a sequence of files)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.FolderName">
      <summary>
Folder name only</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.FolderNameLast">
      <summary>
Folder name only of the last file (in the case of a sequence of files)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.FileName">
      <summary>
File name only</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.FileNameLast">
      <summary>
File name only of the last file (in the case of a sequence of files)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.FileExtension">
      <summary>
File extension only</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.FileInfo.FileExtensionLast">
      <summary>
File extension only of the last file (in the case of a sequence of files)</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.General.Movie">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.General.Movie.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Movie.Name">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Movie.More">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Movie.Country">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Movie.Url">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.General.Performer">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.General.Performer.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Performer.Name">
      <summary>
Main performer/artist of this file</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Performer.Sort">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Performer.Url">
      <summary>
Homepage of the performer/artist</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Performer.OriginalPerformer">
      <summary>
Original artist(s)/performer(s).</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.General.Season">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.General.Season.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Season.Name">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Season.Position">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Season.PositionTotal">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.General.Track">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.General.Track.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Track.Name">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Track.More">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Track.Url">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Track.Sort">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Track.Position">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.General.Track.PositionTotal">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.GeneralBitRateInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.GeneralBitRateInfo.Mode">
      <summary>
Bit rate mode (VBR, CBR)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.GeneralBitRateInfo.ModeString">
      <summary>
Bit rate mode (Constant, Variable)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.GeneralBitRateInfo.String">
      <summary>
Bit rate (with measurement)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.GeneralBitRateInfo.Minimum">
      <summary>
Minimum Bit rate in bps</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.GeneralBitRateInfo.MinimumString">
      <summary>
Minimum Bit rate (with measurement)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.GeneralBitRateInfo.Nominal">
      <summary>
Nominal Bit rate in bps</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.GeneralBitRateInfo.NominalString">
      <summary>
Nominal Bit rate (with measurement)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.GeneralBitRateInfo.Maximum">
      <summary>
Maximum Bit rate in bps</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.GeneralBitRateInfo.MaximumString">
      <summary>
Maximum Bit rate (with measurement)</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Info">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.Info.#ctor(SharpMediaInfo.Output.Media,SharpMediaInfo.Output.Properties.InfoType)">
      <param name="mediaVideo">
</param>
      <param name="type">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Info.String">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Info.Original">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Info.OriginalString">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.Interleave">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.Interleave.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Interleave.VideoFrames">
      <summary>
Between how many video frames the stream is inserted</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Interleave.Duration">
      <summary>
Between how much time (ms) the stream is inserted</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Interleave.DurationString">
      <summary>
Between how much time and video frames the stream is inserted (with measurement)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Interleave.Preload">
      <summary>
How much time is buffered before the first video frame</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.Interleave.PreloadString">
      <summary>
How much time is buffered before the first video frame (with measurement)</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.LanguageInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.LanguageInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.LanguageInfo.String">
      <summary>
Language name (full)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.LanguageInfo.String1">
      <summary>
Language name (full)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.LanguageInfo.String2">
      <summary>
Language (2-letter ISO 639-1 if exists, else empty)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.LanguageInfo.String3">
      <summary>
Language (3-letter ISO 639-2 if exists, else empty)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.LanguageInfo.String4">
      <summary>
Language (2-letter ISO 639-1 if exists with optional ISO 3166-1 country separated by a dash if available, e.g. en, en-us, zh-cn, else empty)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.LanguageInfo.More">
      <summary>
More info about Language (e.g. Director's Comment)</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.ServiceInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.ServiceInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.ServiceInfo.Name">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.ServiceInfo.Channel">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.ServiceInfo.Url">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.ServiceInfo.Provider">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.ServiceInfo.ProviderrUrl">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.ServiceInfo.Type">
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.SizeInfo">
    </member>
    <member name="M:SharpMediaInfo.Output.Properties.SizeInfo.#ctor(SharpMediaInfo.Output.Media)">
      <param name="media">
</param>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.SizeInfo.String">
      <summary>
Size (aperture size if present) with measurement (pixel)</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.SizeInfo.Offset">
      <summary>
Offset between original height and displayed size (aperture size) in pixel</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.SizeInfo.OffsetString">
      <summary>
Offset between original height and displayed size (aperture size) in pixel</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.SizeInfo.Original">
      <summary>
Original (in the raw stream) size in pixel</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.SizeInfo.OriginalString">
      <summary>
Original (in the raw stream) size with measurement (pixel)</summary>
    </member>
    <member name="T:SharpMediaInfo.Output.Properties.StreamSizeInfo">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.StreamSizeInfo.String">
      <summary>
Streamsize in with percentage value</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.StreamSizeInfo.String1">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.StreamSizeInfo.String2">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.StreamSizeInfo.String3">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.StreamSizeInfo.String4">
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.StreamSizeInfo.String5">
      <summary>
Streamsize in with percentage value</summary>
    </member>
    <member name="P:SharpMediaInfo.Output.Properties.StreamSizeInfo.Proportion">
      <summary>
Stream size divided by file size</summary>
    </member>
  </members>
</doc>
